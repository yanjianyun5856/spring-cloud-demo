

server.port = 8080

# 扩展 IPing 实现
service-provider.ribbon.NFLoadBalancerPingClassName = \
  com.yjy.client.ping.MyPing
management.security.enabled = false

## 以下内容配置在 config server
# 服务提供方名称
# service.provide.name = service-provider
# 关闭eureka 客户端
# eureka.client.enabled = false
# service.provide.host = localhost
# service.provide.port = 9090

# 定义 service.provide 的服务地址 , 提供给RibbonLoadBalancerClient
# service-provider.ribbon.listOfServers = http://${service.provide.host}:${service.provide.port}

# 配置占位符 @FeignClient(name="${user.service.name}") //申明feign客户端
# user.service.name 实际需要指定 userService接口的提供方  也就是 service-provider
# user.service.name = ${service.provide.name}

# Kafka 生产者配置
spring.kafka.BOOTSTRAP-SERVERS=47.105.97.61:9092
spring.kafka.consumer.group-id=yjy-group
spring.kafka.consumer.clientId=service-client

# 生产者 值的序列化
spring.kafka.producer.valueSerializer =com.yjy.client.serializer.ObjectSerializer





